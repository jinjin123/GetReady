Metadata-Version: 2.1
Name: QtPy
Version: 1.6.0
Summary: Provides an abstraction layer on top of the various Qt bindings (PyQt5, PyQt4 and PySide) and additional custom QWidgets.
Home-page: https://github.com/spyder-ide/qtpy
Author: Colin Duquesnoy, The Spyder Development Team
Author-email: goanpeca@gmail.com
Maintainer: Gonzalo Pe√±a-Castellanos
Maintainer-email: goanpeca@gmail.com
License: MIT
Keywords: qt PyQt4 PyQt5 PySide
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: X11 Applications :: Qt
Classifier: Environment :: Win32 (MS Windows)
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5


.. image:: https://img.shields.io/pypi/v/QtPy.svg
   :target: https://pypi.python.org/pypi/QtPy/
   :alt: Latest PyPI version

.. image:: https://img.shields.io/pypi/dm/QtPy.svg
   :target: https://pypi.python.org/pypi/QtPy/
   :alt: Number of PyPI downloads

QtPy: Abtraction layer for PyQt5/PyQt4/PySide
=============================================

**QtPy** (pronounced *'cutie pie'*) is a small abstraction layer that lets you
write applications using a single api call to either PyQt or PySide.

It provides support for PyQt5, PyQt4 and PySide using the PyQt5 layout (where
the QtGui module has been split into QtGui and QtWidgets).

Basically, you write your code as if you were using PyQt5 but import qt from
``qtpy`` instead of ``PyQt5``.

- `Issue tracker`_
- `Changelog`_


Attribution and acknowledgements
--------------------------------

This project is based on the `pyqode.qt`_ project and the `spyderlib.qt`_
module from the `spyder`_ project.

Unlike **pyqode.qt** this is not a namespace package so it is not *tied*
to a particular project, or namespace.

.. _spyder: https://github.com/spyder-ide/spyder
.. _spyderlib.qt: https://github.com/spyder-ide/spyder/tree/master/spyderlib/qt
.. _pyqode.qt: https://github.com/pyQode/pyqode.qt
.. _Changelog: https://github.com/spyder-ide/qtpy/blob/master/CHANGELOG.md
.. _Issue tracker: https://github.com/spyder-ide/qtpy/issues


